name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  check-release-needed:
    # Note that 'workflow_dispatch' is never skipped
    if: "!(contains(github.event.head_commit.message, '[cd skip]') || contains(github.event.head_commit.message, '[skip cd]'))"
    runs-on: ubuntu-latest
    steps:
      - name: nop
        run: true


  build-linux:
    needs: [ check-release-needed ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fwdekker/mommy
      - name: Install fpm and build dependencies
        run: |
          sudo apt install -y rubygems libarchive-tools rpm zstd
          sudo gem install --no-document fpm
      - name: Build packages
        run: make dist/generic dist/apk dist/deb dist/rpm dist/pacman
      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/mommy*

  build-macos:
    needs: [ check-release-needed ]
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fwdekker/mommy
      - name: Install fpm
        run: sudo gem install --no-document fpm
      - name: Build package
        run: make dist/osxpkg
      - name: Upload built package
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/mommy*


  release-mommy:
    needs: [ build-linux, build-macos ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: fwdekker/mommy
      - name: Download built packages
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Extract version number
        run: echo "MOMMY_VERSION=v$(head -n 1 ./version)" >> $GITHUB_ENV
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          release_notes_file: RELEASE_NOTES.md
      - name: Checkout release
        uses: softprops/action-gh-release@v1
        if: github.event_name != 'workflow_dispatch'
        with:
          draft: false
          prerelease: false
          tag_name: ${{ env.MOMMY_VERSION }}
          body_path: RELEASE_NOTES.md
          files: mommy*

  release-apt:
    needs: [ release-mommy ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout mommy
        uses: actions/checkout@v4
        with:
          repository: fwdekker/mommy
          path: src-mommy
      - name: Extract version number
        run: echo "MOMMY_VERSION=v$(head -n 1 ./src-mommy/version)" >> $GITHUB_ENV

      - name: Checkout apt-mommy
        uses: actions/checkout@v4
        with:
          repository: fwdekker/apt-test
          path: apt-mommy
          ref: main
          fetch-depth: 0
          # Required to push '.deb' to repository
          token: ${{ secrets.personal_access_token }}
      - name: Download built packages
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist-mommy
      - name: Move .deb into apt-mommy
        run: cp dist-mommy/*.deb apt-mommy/deb/

      - name: Import GPG key
        run: echo "$apt_gpg_private_key" | gpg --import
        env:
          apt_gpg_private_key: ${{ secrets.apt_gpg_private_key }}
      - name: Update apt-mommy
        working-directory: apt-mommy
        run: |
          echo "::group::Run update script"
          ./update.sh
          echo "::endgroup::"

          echo "::group::Commit changes"
          git add --all
          git config --global user.name "FWDekkerBot"
          git config --global user.email "bot@fwdekker.com"
          git commit -am "ðŸ”– mommy added package mommy $MOMMY_VERSION~"
          echo "::endgroup::"

          if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
            echo "::group::Push changes"
            git push origin
            echo "::endgroup::"
          else
            echo "::group::Not pushing changes"
            echo "::endgroup::"
          fi;
